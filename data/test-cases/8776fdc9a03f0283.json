{"uid":"8776fdc9a03f0283","name":"test_update_pet_with_form","fullName":"tests.test_pet_api#test_update_pet_with_form","historyId":"656720f08623ee68515bcd5371bc9c97","time":{"start":1760520317113,"stop":1760520338229,"duration":21116},"description":"Update test with handling unstable Petstore API","descriptionHtml":"<p>Update test with handling unstable Petstore API</p>\n","status":"skipped","statusMessage":"XFAIL Petstore API instability - pet 798133751 temporarily unavailable\n\n_pytest.outcomes.XFailed: Petstore API instability - pet 798133751 temporarily unavailable","statusTrace":"pet_api = <src.api.pet_api.PetApi object at 0x7ff5089646a0>\npet_payload = {'category': {'id': 1407217968, 'name': 'fish'}, 'id': 798133751, 'name': 'Rex', 'photoUrls': ['https://picsum.photos/399/264'], ...}\n\n    @pytest.mark.flaky(reruns=5, reruns_delay=5)\n    def test_update_pet_with_form(pet_api, pet_payload):\n        \"\"\"Update test with handling unstable Petstore API\"\"\"\n    \n        creating_pet = pet_api.add_pet(pet_payload)\n        assert creating_pet.status_code == 200, f\"unsuccessful attempt to add a pet\"\n    \n        created_pet_data = creating_pet.json()\n        pet_id = created_pet_data[\"id\"]\n        print(f\"✅ Created pet with ID: {pet_id}\")\n    \n        PetWaiter.wait_for_pet(pet_api, pet_id, expected_status=200)\n        print(f\"✅ Pet {pet_id} confirmed available\")\n    \n        time.sleep(3)\n    \n        new_name = \"Lopik\"\n        new_status = \"sold\"\n    \n        print(f\"\uD83D\uDD04 Starting update process for pet {pet_id}\")\n    \n        response_with_update = UpdateWaiter.wait_for_update_success(\n            pet_api,\n            pet_id,\n            pet_api.update_pet_with_form_data,\n            pet_id, new_name, new_status\n        )\n    \n        response_with_update_data = response_with_update.json()\n        assert \"message\" in response_with_update_data, f\"No 'message' in response: {response_with_update_data}\"\n        assert str(pet_id) in response_with_update_data[\"message\"], f\"Wrong pet ID in response: {response_with_update_data}\"\n    \n        \"\"\"Waiting for the updated pet (may take longer)\"\"\"\n        print(f\"⏳ Waiting for updated pet {pet_id} to be available...\")\n        time.sleep(10)\n    \n        \"\"\"Checking for updates with handling of possible 404s\"\"\"\n        try:\n            get_pet_by_id = pet_api.find_pet_by_id(pet_id)\n    \n            if get_pet_by_id.status_code == 200:\n                updated_pet_data = get_pet_by_id.json()\n                print(f\"✅ Successfully retrieved updated pet: {updated_pet_data}\")\n    \n                assert updated_pet_data[\n                           \"name\"] == new_name, f\"Name not updated: expected {new_name}, got {updated_pet_data['name']}\"\n                assert updated_pet_data[\n                           \"status\"] == new_status, f\"Status not updated: expected {new_status}, got {updated_pet_data['status']}\"\n    \n            elif get_pet_by_id.status_code == 404:\n                print(f\"⚠️ Pet {pet_id} not found after update (API instability)\")\n                \"\"\"Maybe the animal has updated, but the API is temporarily not displaying\n                In a real project, there would be recheck logic here\"\"\"\n>               pytest.xfail(f\"Petstore API instability - pet {pet_id} temporarily unavailable\")\nE               _pytest.outcomes.XFailed: Petstore API instability - pet 798133751 temporarily unavailable\n\ntests/test_pet_api.py:140: XFailed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":true,"beforeStages":[{"name":"_session_faker","time":{"start":1760520295014,"stop":1760520295015,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"pet_api","time":{"start":1760520295015,"stop":1760520295015,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_client","time":{"start":1760520295015,"stop":1760520295015,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"pet_payload","time":{"start":1760520317113,"stop":1760520317113,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Update test with handling unstable Petstore API","status":"skipped","statusMessage":"XFAIL Petstore API instability - pet 798133751 temporarily unavailable\n\n_pytest.outcomes.XFailed: Petstore API instability - pet 798133751 temporarily unavailable","statusTrace":"pet_api = <src.api.pet_api.PetApi object at 0x7ff5089646a0>\npet_payload = {'category': {'id': 1407217968, 'name': 'fish'}, 'id': 798133751, 'name': 'Rex', 'photoUrls': ['https://picsum.photos/399/264'], ...}\n\n    @pytest.mark.flaky(reruns=5, reruns_delay=5)\n    def test_update_pet_with_form(pet_api, pet_payload):\n        \"\"\"Update test with handling unstable Petstore API\"\"\"\n    \n        creating_pet = pet_api.add_pet(pet_payload)\n        assert creating_pet.status_code == 200, f\"unsuccessful attempt to add a pet\"\n    \n        created_pet_data = creating_pet.json()\n        pet_id = created_pet_data[\"id\"]\n        print(f\"✅ Created pet with ID: {pet_id}\")\n    \n        PetWaiter.wait_for_pet(pet_api, pet_id, expected_status=200)\n        print(f\"✅ Pet {pet_id} confirmed available\")\n    \n        time.sleep(3)\n    \n        new_name = \"Lopik\"\n        new_status = \"sold\"\n    \n        print(f\"\uD83D\uDD04 Starting update process for pet {pet_id}\")\n    \n        response_with_update = UpdateWaiter.wait_for_update_success(\n            pet_api,\n            pet_id,\n            pet_api.update_pet_with_form_data,\n            pet_id, new_name, new_status\n        )\n    \n        response_with_update_data = response_with_update.json()\n        assert \"message\" in response_with_update_data, f\"No 'message' in response: {response_with_update_data}\"\n        assert str(pet_id) in response_with_update_data[\"message\"], f\"Wrong pet ID in response: {response_with_update_data}\"\n    \n        \"\"\"Waiting for the updated pet (may take longer)\"\"\"\n        print(f\"⏳ Waiting for updated pet {pet_id} to be available...\")\n        time.sleep(10)\n    \n        \"\"\"Checking for updates with handling of possible 404s\"\"\"\n        try:\n            get_pet_by_id = pet_api.find_pet_by_id(pet_id)\n    \n            if get_pet_by_id.status_code == 200:\n                updated_pet_data = get_pet_by_id.json()\n                print(f\"✅ Successfully retrieved updated pet: {updated_pet_data}\")\n    \n                assert updated_pet_data[\n                           \"name\"] == new_name, f\"Name not updated: expected {new_name}, got {updated_pet_data['name']}\"\n                assert updated_pet_data[\n                           \"status\"] == new_status, f\"Status not updated: expected {new_status}, got {updated_pet_data['status']}\"\n    \n            elif get_pet_by_id.status_code == 404:\n                print(f\"⚠️ Pet {pet_id} not found after update (API instability)\")\n                \"\"\"Maybe the animal has updated, but the API is temporarily not displaying\n                In a real project, there would be recheck logic here\"\"\"\n>               pytest.xfail(f\"Petstore API instability - pet {pet_id} temporarily unavailable\")\nE               _pytest.outcomes.XFailed: Petstore API instability - pet 798133751 temporarily unavailable\n\ntests/test_pet_api.py:140: XFailed","steps":[{"name":"POST /pet","time":{"start":1760520317113,"stop":1760520317382,"duration":269},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"GET /pet/{petId}","time":{"start":1760520317382,"stop":1760520317659,"duration":277},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"POST /pet/pet_id","time":{"start":1760520320663,"stop":1760520320933,"duration":270},"status":"passed","steps":[{"name":"POST /pet/798133751","time":{"start":1760520320663,"stop":1760520320933,"duration":270},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"pet_id","value":"798133751"},{"name":"name","value":"'Lopik'"},{"name":"status","value":"'sold'"}],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"POST /pet/pet_id","time":{"start":1760520322935,"stop":1760520323226,"duration":291},"status":"passed","steps":[{"name":"POST /pet/798133751","time":{"start":1760520322935,"stop":1760520323226,"duration":291},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"pet_id","value":"798133751"},{"name":"name","value":"'Lopik'"},{"name":"status","value":"'sold'"}],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"POST /pet/pet_id","time":{"start":1760520325230,"stop":1760520325513,"duration":283},"status":"passed","steps":[{"name":"POST /pet/798133751","time":{"start":1760520325230,"stop":1760520325513,"duration":283},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"pet_id","value":"798133751"},{"name":"name","value":"'Lopik'"},{"name":"status","value":"'sold'"}],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"POST /pet/pet_id","time":{"start":1760520327517,"stop":1760520327791,"duration":274},"status":"passed","steps":[{"name":"POST /pet/798133751","time":{"start":1760520327517,"stop":1760520327791,"duration":274},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"pet_id","value":"798133751"},{"name":"name","value":"'Lopik'"},{"name":"status","value":"'sold'"}],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"GET /pet/{petId}","time":{"start":1760520337803,"stop":1760520338229,"duration":426},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[{"uid":"fedc9b03f1b89da0","name":"stdout","source":"fedc9b03f1b89da0.txt","type":"text/plain","size":1785}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":11,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_pet_api"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"3613-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_pet_api"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"c44a66efee9d748c","status":"failed","statusDetails":"AssertionError: Update failed after 5 attempts due to API instability","time":{"start":1760520297085,"stop":1760520312062,"duration":14977}}],"categories":[],"history":{"statistic":{"failed":1,"broken":0,"skipped":1,"passed":18,"unknown":0,"total":20},"items":[{"uid":"e78e70cbad65980f","status":"passed","time":{"start":1760516465911,"stop":1760516481782,"duration":15871}},{"uid":"2610454d6224e9a","status":"passed","time":{"start":1760002602666,"stop":1760002606419,"duration":3753}},{"uid":"8b1cc45dffca828d","status":"passed","time":{"start":1760001018736,"stop":1760001021919,"duration":3183}},{"uid":"df037cf90f26f27b","status":"passed","time":{"start":1760000983937,"stop":1760000992441,"duration":8504}},{"uid":"83ea62c8c7f5da2d","status":"passed","time":{"start":1760000678399,"stop":1760000682067,"duration":3668}},{"uid":"7ed98b864755e4b1","status":"passed","time":{"start":1760000596103,"stop":1760000600911,"duration":4808}},{"uid":"d1ed040ae17fe9eb","status":"passed","time":{"start":1760000230805,"stop":1760000234012,"duration":3207}},{"uid":"a2d4c8a886676d79","status":"passed","time":{"start":1759998400071,"stop":1759998404120,"duration":4049}},{"uid":"5447b92e4c579c52","status":"passed","time":{"start":1759998225364,"stop":1759998228570,"duration":3206}},{"uid":"a2addd2c8d2201cb","status":"passed","time":{"start":1759996200105,"stop":1759996205012,"duration":4907}},{"uid":"eb53251b813e2a1","status":"passed","time":{"start":1759996135589,"stop":1759996138979,"duration":3390}},{"uid":"6d0f521fd73ace47","status":"passed","time":{"start":1759996085056,"stop":1759996089064,"duration":4008}},{"uid":"cb9e7b8b309010f1","status":"passed","time":{"start":1759995894664,"stop":1759995907689,"duration":13025}},{"uid":"9653ac3b7a96a96f","status":"passed","time":{"start":1759995725365,"stop":1759995729064,"duration":3699}},{"uid":"8c200fac5752a3b5","status":"passed","time":{"start":1759995489618,"stop":1759995497737,"duration":8119}},{"uid":"bd1698499908bcf8","status":"failed","statusDetails":"AssertionError: Expected status code: 200, but got: 404","time":{"start":1759995388217,"stop":1759995392197,"duration":3980}},{"uid":"bfc9fa5d7f849fd8","status":"passed","time":{"start":1759959734121,"stop":1759959739865,"duration":5744}},{"uid":"6f9e7a2551adb759","status":"passed","time":{"start":1759959593546,"stop":1759959600291,"duration":6745}},{"uid":"b099f5624c80ed4e","reportUrl":"https://KovalIllia.github.io/testProject2/18/#testresult/b099f5624c80ed4e","status":"passed","time":{"start":1759087590911,"stop":1759087596359,"duration":5448}}]},"tags":[]},"source":"8776fdc9a03f0283.json","parameterValues":[]}