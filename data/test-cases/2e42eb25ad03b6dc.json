{"uid":"2e42eb25ad03b6dc","name":"test_find_store_order_by_id","fullName":"tests.test_store_api#test_find_store_order_by_id","historyId":"50e111512e35af8e4c2582fba9580b05","time":{"start":1760521115184,"stop":1760521124357,"duration":9173},"status":"failed","statusMessage":"AssertionError: Failed to get order by : 5297\nassert 404 == 200\n +  where 404 = <Response [404]>.status_code","statusTrace":"store_api = <src.api.store_api.StoreApi object at 0x7f77ae01d220>\nstore_payload = {'complete': True, 'id': 5297, 'petId': 670, 'quantity': 3, ...}\n\n    @pytest.mark.flaky(reruns=3, reruns_delay=2)\n    @pytest.mark.unstable(reason=\"Petstore API sometimes returns 404 after order creation\")\n    def test_find_store_order_by_id(store_api, store_payload):\n        create_order_response = store_api.place_order(store_payload)\n        assert create_order_response.status_code == 200, f\"unsuccessful attempt to create an order\"\n    \n        store_data = create_order_response.json()\n        assert isinstance(store_data, dict), \"Expected dict of pets\"\n        assert len(store_data) > 0, \"Empty order data\"\n        order_id = store_data[\"id\"]\n        assert order_id is not None, \"Order ID should not be None\"\n        StoreWaiter.wait_for_order(store_api, order_id, expected_status=200)\n        find_order = store_api.get_info_about_placed_order_by_id(order_id)\n>       assert find_order.status_code == 200, f\"Failed to get order by : {order_id}\"\nE       AssertionError: Failed to get order by : 5297\nE       assert 404 == 200\nE        +  where 404 = <Response [404]>.status_code\n\ntests/test_store_api.py:32: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1760521064253,"stop":1760521064254,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_client","time":{"start":1760521064255,"stop":1760521064255,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"store_api","time":{"start":1760521108044,"stop":1760521108044,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"store_payload","time":{"start":1760521108044,"stop":1760521108044,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Failed to get order by : 5297\nassert 404 == 200\n +  where 404 = <Response [404]>.status_code","statusTrace":"store_api = <src.api.store_api.StoreApi object at 0x7f77ae01d220>\nstore_payload = {'complete': True, 'id': 5297, 'petId': 670, 'quantity': 3, ...}\n\n    @pytest.mark.flaky(reruns=3, reruns_delay=2)\n    @pytest.mark.unstable(reason=\"Petstore API sometimes returns 404 after order creation\")\n    def test_find_store_order_by_id(store_api, store_payload):\n        create_order_response = store_api.place_order(store_payload)\n        assert create_order_response.status_code == 200, f\"unsuccessful attempt to create an order\"\n    \n        store_data = create_order_response.json()\n        assert isinstance(store_data, dict), \"Expected dict of pets\"\n        assert len(store_data) > 0, \"Empty order data\"\n        order_id = store_data[\"id\"]\n        assert order_id is not None, \"Order ID should not be None\"\n        StoreWaiter.wait_for_order(store_api, order_id, expected_status=200)\n        find_order = store_api.get_info_about_placed_order_by_id(order_id)\n>       assert find_order.status_code == 200, f\"Failed to get order by : {order_id}\"\nE       AssertionError: Failed to get order by : 5297\nE       assert 404 == 200\nE        +  where 404 = <Response [404]>.status_code\n\ntests/test_store_api.py:32: AssertionError","steps":[{"name":"POST /store/order","time":{"start":1760521115184,"stop":1760521115409,"duration":225},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"body","value":"{'id': 5297, 'petId': 670, 'quantity': 3, 'shipDate': '2025-10-15T09:38:28.044488', 'status': 'placed', 'complete': True}"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"GET /store/order/order_id","time":{"start":1760521115409,"stop":1760521115635,"duration":226},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"order_id","value":"5297"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"GET /store/order/order_id","time":{"start":1760521119640,"stop":1760521119882,"duration":242},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"order_id","value":"5297"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"GET /store/order/order_id","time":{"start":1760521123887,"stop":1760521124136,"duration":249},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"order_id","value":"5297"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"GET /store/order/order_id","time":{"start":1760521124138,"stop":1760521124357,"duration":219},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"order_id","value":"5297"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"c0f53e8ad4641a2c","name":"stdout","source":"c0f53e8ad4641a2c.txt","type":"text/plain","size":120}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":5,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_store_api"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"3584-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_store_api"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"2e42eb25ad03b6dc.json","parameterValues":[]}