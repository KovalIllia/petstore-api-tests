{"uid":"cbff1ec48beaaf5","name":"test_delete_pet","fullName":"tests.test_pet_api#test_delete_pet","historyId":"7b7f9983b6645deb5a9ba405d438d9da","time":{"start":1760521369339,"stop":1760521375915,"duration":6576},"status":"failed","statusMessage":"AssertionError: unsuccessful attempt to delete a pet\nassert 404 == 200\n +  where 404 = <Response [404]>.status_code","statusTrace":"pet_api = <src.api.pet_api.PetApi object at 0x7f02f945c6d0>\npet_payload = {'category': {'id': 1738722840, 'name': 'idea'}, 'id': 357998688, 'name': 'Rex', 'photoUrls': ['https://picsum.photos/447/363'], ...}\n\n    @pytest.mark.flaky(reruns=3, reruns_delay=2)\n    def test_delete_pet(pet_api, pet_payload):\n        creating_pet = pet_api.add_pet(pet_payload)\n        assert creating_pet.status_code == 200, f\"unsuccessful attempt to add a pet\"\n    \n        pet_id = creating_pet.json()[\"id\"]\n        PetWaiter.wait_for_pet(pet_api, pet_id, expected_status=200)\n        delete_response = pet_api.delete_pet(pet_id)\n>       assert delete_response.status_code == 200, f\"unsuccessful attempt to delete a pet\"\nE       AssertionError: unsuccessful attempt to delete a pet\nE       assert 404 == 200\nE        +  where 404 = <Response [404]>.status_code\n\ntests/test_pet_api.py:155: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1760521332761,"stop":1760521332762,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"pet_api","time":{"start":1760521332762,"stop":1760521332763,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_client","time":{"start":1760521332762,"stop":1760521332762,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"pet_payload","time":{"start":1760521369338,"stop":1760521369338,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: unsuccessful attempt to delete a pet\nassert 404 == 200\n +  where 404 = <Response [404]>.status_code","statusTrace":"pet_api = <src.api.pet_api.PetApi object at 0x7f02f945c6d0>\npet_payload = {'category': {'id': 1738722840, 'name': 'idea'}, 'id': 357998688, 'name': 'Rex', 'photoUrls': ['https://picsum.photos/447/363'], ...}\n\n    @pytest.mark.flaky(reruns=3, reruns_delay=2)\n    def test_delete_pet(pet_api, pet_payload):\n        creating_pet = pet_api.add_pet(pet_payload)\n        assert creating_pet.status_code == 200, f\"unsuccessful attempt to add a pet\"\n    \n        pet_id = creating_pet.json()[\"id\"]\n        PetWaiter.wait_for_pet(pet_api, pet_id, expected_status=200)\n        delete_response = pet_api.delete_pet(pet_id)\n>       assert delete_response.status_code == 200, f\"unsuccessful attempt to delete a pet\"\nE       AssertionError: unsuccessful attempt to delete a pet\nE       assert 404 == 200\nE        +  where 404 = <Response [404]>.status_code\n\ntests/test_pet_api.py:155: AssertionError","steps":[{"name":"POST /pet","time":{"start":1760521369339,"stop":1760521369451,"duration":112},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"GET /pet/{petId}","time":{"start":1760521369451,"stop":1760521369561,"duration":110},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"GET /pet/{petId}","time":{"start":1760521372564,"stop":1760521372680,"duration":116},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"GET /pet/{petId}","time":{"start":1760521375684,"stop":1760521375799,"duration":115},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"DELETE /pet/{petId}","time":{"start":1760521375801,"stop":1760521375915,"duration":114},"status":"passed","steps":[],"attachments":[{"uid":"e6558858d90070c1","name":"delete_pet_357998688","source":"e6558858d90070c1.txt","type":"text/plain","size":21}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"e1170d3ace915e20","name":"stdout","source":"e1170d3ace915e20.txt","type":"text/plain","size":747}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":5,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_pet_api"},{"name":"host","value":"runnervmwhb2z"},{"name":"thread","value":"3562-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_pet_api"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"cbff1ec48beaaf5.json","parameterValues":[]}