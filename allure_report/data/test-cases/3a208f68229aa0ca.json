{"uid":"3a208f68229aa0ca","name":"test_delete_purchase_order_by_id","fullName":"tests.test_store_api#test_delete_purchase_order_by_id","historyId":"13102cf2ca1ac160ed80b3ca2dcd5625","time":{"start":1757964961474,"stop":1757964961987,"duration":513},"status":"failed","statusMessage":"AssertionError","statusTrace":"place_order_for_a_pet = <Response [200]>, store_api = <api.store_api.StoreApi object at 0x7aa8f3e906e0>\n\n    def test_delete_purchase_order_by_id(place_order_for_a_pet,store_api):\n        order_id=place_order_for_a_pet.json()[\"id\"]\n        delete_purchase_order_by_id=store_api.delete_placed_order(order_id)\n        print(delete_purchase_order_by_id.status_code,delete_purchase_order_by_id.json())\n>       Checking.check_status_code(response=delete_purchase_order_by_id,status_code=200)\n\ntests/test_store_api.py:56: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [404]>, status_code = 200\n\n    @staticmethod\n    def check_status_code(response: requests.Response, status_code:int):\n>       assert response.status_code == status_code# espectedResult==actualResult\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE       AssertionError\n\nutils/checking_methods.py:12: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1757964949029,"stop":1757964949030,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_client","time":{"start":1757964949030,"stop":1757964949030,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"store_api","time":{"start":1757964959918,"stop":1757964959918,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"place_order_for_a_pet","time":{"start":1757964960439,"stop":1757964960949,"duration":510},"status":"passed","steps":[{"name":"POST /store/order","time":{"start":1757964960440,"stop":1757964960949,"duration":509},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError","statusTrace":"place_order_for_a_pet = <Response [200]>, store_api = <api.store_api.StoreApi object at 0x7aa8f3e906e0>\n\n    def test_delete_purchase_order_by_id(place_order_for_a_pet,store_api):\n        order_id=place_order_for_a_pet.json()[\"id\"]\n        delete_purchase_order_by_id=store_api.delete_placed_order(order_id)\n        print(delete_purchase_order_by_id.status_code,delete_purchase_order_by_id.json())\n>       Checking.check_status_code(response=delete_purchase_order_by_id,status_code=200)\n\ntests/test_store_api.py:56: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [404]>, status_code = 200\n\n    @staticmethod\n    def check_status_code(response: requests.Response, status_code:int):\n>       assert response.status_code == status_code# espectedResult==actualResult\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE       AssertionError\n\nutils/checking_methods.py:12: AssertionError","steps":[{"name":"DELETE /store/order/2088","time":{"start":1757964961474,"stop":1757964961986,"duration":512},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[{"uid":"d301d97762968272","name":"stdout","source":"d301d97762968272.txt","type":"text/plain","size":168}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_store_api"},{"name":"host","value":"LinuxOS48"},{"name":"thread","value":"20678-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_store_api"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"3a208f68229aa0ca.json","parameterValues":[]}