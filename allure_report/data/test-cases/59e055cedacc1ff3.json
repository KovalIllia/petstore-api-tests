{"uid":"59e055cedacc1ff3","name":"test_update_pet_with_form","fullName":"tests.test_pet_api#test_update_pet_with_form","historyId":"656720f08623ee68515bcd5371bc9c97","time":{"start":1757964950999,"stop":1757964958692,"duration":7693},"status":"failed","statusMessage":"AssertionError: Pet 796 not found after 5 attemps","statusTrace":"create_pet = <Response [200]>, pet_api = <api.pet_api.PetApi object at 0x7aa8f3e92c90>\n\n    def test_update_pet_with_form(create_pet,pet_api):\n        created_pet=create_pet.json()[\"id\"]\n>       wait_for_pet(created_pet,pet_api,retries=5,delay=1)\n\ntests/test_pet_api.py:67: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npet_id = 796, pet_api = <api.pet_api.PetApi object at 0x7aa8f3e92c90>, retries = 5, delay = 1\n\n    def wait_for_pet(pet_id, pet_api, retries=3, delay=1):\n        for attempt in range(1, retries + 1):\n            response = pet_api.find_pet_by_id(pet_id)\n            if response.status_code == 200:\n                return response\n            print(f\"[Retry {attempt}] Pet {pet_id} not available, status {response.status_code}\")\n            time.sleep(delay)\n>       raise AssertionError(f\"Pet {pet_id} not found after {retries} attemps\")\nE       AssertionError: Pet 796 not found after 5 attemps\n\ntests/test_pet_api.py:82: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1757964949029,"stop":1757964949030,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"pet_api","time":{"start":1757964949030,"stop":1757964949030,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"api_client","time":{"start":1757964949030,"stop":1757964949030,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"create_pet","time":{"start":1757964949030,"stop":1757964949634,"duration":604},"status":"passed","steps":[{"name":"POST /pet","time":{"start":1757964949031,"stop":1757964949634,"duration":603},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Pet 796 not found after 5 attemps","statusTrace":"create_pet = <Response [200]>, pet_api = <api.pet_api.PetApi object at 0x7aa8f3e92c90>\n\n    def test_update_pet_with_form(create_pet,pet_api):\n        created_pet=create_pet.json()[\"id\"]\n>       wait_for_pet(created_pet,pet_api,retries=5,delay=1)\n\ntests/test_pet_api.py:67: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npet_id = 796, pet_api = <api.pet_api.PetApi object at 0x7aa8f3e92c90>, retries = 5, delay = 1\n\n    def wait_for_pet(pet_id, pet_api, retries=3, delay=1):\n        for attempt in range(1, retries + 1):\n            response = pet_api.find_pet_by_id(pet_id)\n            if response.status_code == 200:\n                return response\n            print(f\"[Retry {attempt}] Pet {pet_id} not available, status {response.status_code}\")\n            time.sleep(delay)\n>       raise AssertionError(f\"Pet {pet_id} not found after {retries} attemps\")\nE       AssertionError: Pet 796 not found after 5 attemps\n\ntests/test_pet_api.py:82: AssertionError","steps":[{"name":"GET /pet/{petId}","time":{"start":1757964950999,"stop":1757964951515,"duration":516},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"GET /pet/{petId}","time":{"start":1757964952516,"stop":1757964953129,"duration":613},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"GET /pet/{petId}","time":{"start":1757964954131,"stop":1757964954648,"duration":517},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"GET /pet/{petId}","time":{"start":1757964955650,"stop":1757964956171,"duration":521},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"GET /pet/{petId}","time":{"start":1757964957174,"stop":1757964957689,"duration":515},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[{"uid":"e818d05a65f21e29","name":"stdout","source":"e818d05a65f21e29.txt","type":"text/plain","size":705}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":5,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_pet_api"},{"name":"host","value":"LinuxOS48"},{"name":"thread","value":"20678-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_pet_api"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"59e055cedacc1ff3.json","parameterValues":[]}