{"name": "test_update_pet_with_form", "status": "failed", "statusDetails": {"message": "AssertionError: Expected status code: 200, but got: 404", "trace": "pet_api = <src.api.pet_api.PetApi object at 0x76f9a2f3d850>\npet_payload = {'category': {'id': 1679943115, 'name': 'international'}, 'id': 1262351831, 'name': 'Rex', 'photoUrls': ['https://picsum.photos/902/155'], ...}\n\n    @pytest.mark.flaky(reruns=3,reruns_delay=2)\n    def test_update_pet_with_form(pet_api,pet_payload):\n    \n        creating_pet = pet_api.add_pet(pet_payload)\n        time.sleep(3)\n        created_pet = creating_pet.json()\n        pet_id = created_pet[\"id\"]\n    \n    \n        PetWaiter.wait_for_pet(pet_api, pet_id,expected_status=200)\n        response_with_update = pet_api.update_pet_with_form_data(\n            pet_id,\n            name=\"Lopik\",\n            status=\"sold\"\n        )\n    \n>       Checking.check_status_code(response=response_with_update, status_code=200)\n\ntests/test_pet_api.py:94: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [404]>, status_code = 200\n\n    @staticmethod\n    def check_status_code(response: requests.Response, status_code):\n        \"\"\"\n        Checks the response status code. Can handle a single integer or a list/tuple of integers.\n        \"\"\"\n        if isinstance(status_code, (list, tuple)):\n            assert response.status_code in status_code, \\\n                f\"Expected status codes: {status_code}, but got: {response.status_code}\"\n        else:\n>           assert response.status_code == status_code, \\\n                f\"Expected status code: {status_code}, but got: {response.status_code}\"\nE           AssertionError: Expected status code: 200, but got: 404\n\nutils/checking_methods.py:19: AssertionError"}, "steps": [{"name": "POST /pet", "status": "passed", "start": 1759921263074, "stop": 1759921263583}, {"name": "GET /pet/{petId}", "status": "passed", "start": 1759921266586, "stop": 1759921267101}, {"name": "POST /pet/1262351831", "status": "passed", "start": 1759921267102, "stop": 1759921267607}], "start": 1759921263074, "stop": 1759921267607, "uuid": "9a54fe37-379b-41ca-b3bb-b8dde13dc9f5", "historyId": "656720f08623ee68515bcd5371bc9c97", "testCaseId": "656720f08623ee68515bcd5371bc9c97", "fullName": "tests.test_pet_api#test_update_pet_with_form", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_pet_api"}, {"name": "host", "value": "6c38276ade64"}, {"name": "thread", "value": "1-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_pet_api"}], "titlePath": ["tests", "test_pet_api.py"]}